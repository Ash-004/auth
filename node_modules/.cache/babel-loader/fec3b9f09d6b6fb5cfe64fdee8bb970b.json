{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { db, auth } from \"../firebase\";\n\nconst useFetchDataOnWebsiteLoad = () => {\n  _s();\n\n  useEffect(() => {\n    // Get the logged-in user\n    const user = auth.currentUser; // Check if a user is logged in\n\n    if (true) {\n      // Retrieve the collection with the user's UID as the collection name\n      const colRef = collection(db, \"\"); // Fetch the documents within the collection\n\n      collectionRef.get().then(querySnapshot => {\n        const data = [];\n        querySnapshot.forEach(doc => {\n          // Retrieve the values from the \"balance,\" \"income,\" and \"expense\" fields\n          const {\n            baclance,\n            income,\n            expense\n          } = doc.data(); // Store the values in a variable or perform any other desired actions\n          // For example, you can store them in state variables or log them to the console\n\n          data.push({\n            baclance,\n            income,\n            expense\n          });\n        });\n        console.log(data); // or store the data in state variables\n      }).catch(error => {\n        console.error(\"Error fetching documents:\", error);\n      });\n    }\n  }, []);\n};\n\n_s(useFetchDataOnWebsiteLoad, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default useFetchDataOnWebsiteLoad;","map":{"version":3,"sources":["/home/ash/hack/React_Firebase_Auth_Tutorial/src/components/retrive functions.js"],"names":["useEffect","db","auth","useFetchDataOnWebsiteLoad","user","currentUser","colRef","collection","collectionRef","get","then","querySnapshot","data","forEach","doc","baclance","income","expense","push","console","log","catch","error"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,EAAT,EAAaC,IAAb,QAAyB,aAAzB;;AAEA,MAAMC,yBAAyB,GAAG,MAAM;AAAA;;AACpCH,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMI,IAAI,GAAGF,IAAI,CAACG,WAAlB,CAFY,CAIZ;;AACA,QAAI,IAAJ,EAAU;AACN;AACA,YAAMC,MAAM,GAAGC,UAAU,CAACN,EAAD,EAAK,EAAL,CAAzB,CAFM,CAGN;;AACAO,MAAAA,aAAa,CACRC,GADL,GAEKC,IAFL,CAEWC,aAAD,IAAmB;AACrB,cAAMC,IAAI,GAAG,EAAb;AAEAD,QAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAC3B;AACA,gBAAM;AAAEC,YAAAA,QAAF;AAAYC,YAAAA,MAAZ;AAAoBC,YAAAA;AAApB,cAAgCH,GAAG,CAACF,IAAJ,EAAtC,CAF2B,CAI3B;AACA;;AACAA,UAAAA,IAAI,CAACM,IAAL,CAAU;AAAEH,YAAAA,QAAF;AAAYC,YAAAA,MAAZ;AAAoBC,YAAAA;AAApB,WAAV;AACH,SAPD;AASAE,QAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAZqB,CAYF;AACtB,OAfL,EAgBKS,KAhBL,CAgBYC,KAAD,IAAW;AACdH,QAAAA,OAAO,CAACG,KAAR,CAAc,2BAAd,EAA2CA,KAA3C;AACH,OAlBL;AAmBH;AACJ,GA7BQ,EA6BN,EA7BM,CAAT;AA8BH,CA/BD;;GAAMnB,yB;;AAiCN,eAAeA,yBAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { db, auth } from \"../firebase\";\n\nconst useFetchDataOnWebsiteLoad = () => {\n    useEffect(() => {\n        // Get the logged-in user\n        const user = auth.currentUser;\n\n        // Check if a user is logged in\n        if (true) {\n            // Retrieve the collection with the user's UID as the collection name\n            const colRef = collection(db, \"\");\n            // Fetch the documents within the collection\n            collectionRef\n                .get()\n                .then((querySnapshot) => {\n                    const data = [];\n\n                    querySnapshot.forEach((doc) => {\n                        // Retrieve the values from the \"balance,\" \"income,\" and \"expense\" fields\n                        const { baclance, income, expense } = doc.data();\n\n                        // Store the values in a variable or perform any other desired actions\n                        // For example, you can store them in state variables or log them to the console\n                        data.push({ baclance, income, expense });\n                    });\n\n                    console.log(data); // or store the data in state variables\n                })\n                .catch((error) => {\n                    console.error(\"Error fetching documents:\", error);\n                });\n        }\n    }, []);\n};\n\nexport default useFetchDataOnWebsiteLoad;\n"]},"metadata":{},"sourceType":"module"}