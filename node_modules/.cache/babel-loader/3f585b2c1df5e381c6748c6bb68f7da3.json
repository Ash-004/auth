{"ast":null,"code":"var _jsxFileName = \"/home/ash/hack/React_Firebase_Auth_Tutorial/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { db } from \"../firebase\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nimport { doc } from \"firebase/firestore\";\nimport { getFirestore, collection, setDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    signUp\n  } = useUserAuth();\n  let navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    try {\n      // Sign up the user\n      const userCredential = await signUp(email, password);\n      const user = userCredential.user;\n      const setBalance = doc(db, user.uid, \"balance\");\n      const setIncome = doc(db, user.uid, 'income');\n      const setBcatIncome = doc(db, `${user.uid}/income/categories`, 'business');\n      const setIcatIncome = doc(db, `${user.uid}/income/categories`, 'investment-returns');\n      const setOcatIncome = doc(db, `${user.uid}/income/categories`, 'others');\n      const setScatIncome = doc(db, `${user.uid}/income/categories`, 'salary');\n      const setExpense = doc(db, user.uid, 'expense');\n      const setFExpense = doc(db, `${user.uid}/expense/categories`, 'food');\n      const setOExpense = doc(db, `${user.uid}/income/categories`, 'others');\n      const setRExpense = doc(db, `${user.uid}/income/categories`, 'rent');\n      const setSExpense = doc(db, `${user.uid}/income/categories`, 'shopping');\n      const setTExpense = doc(db, `${user.uid}/income/categories`, 'travel');\n      const setBudget = doc(db, user.uid, 'budget');\n      setDoc(setBalance, {\n        total: \"0\"\n      }, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setIncome, {\n        total: \"0\"\n      }, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setBcatIncome, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setIcatIncome, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setOcatIncome, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setScatIncome, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setExpense, {\n        total: \"0\"\n      }, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setFExpense, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setOExpense, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setRExpense, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setSExpense, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setTExpense, {\n        capital: true\n      }, {\n        merge: true\n      });\n      setDoc(setBudget, {\n        total: \"0\"\n      }, {\n        capital: true\n      }, {\n        merge: true\n      }); // Define the document reference and data for the new user document\n\n      const docRef = doc(db, \"users\", user.uid);\n      const data = {\n        // Add the necessary fields for the new user document\n        // For example, you can include a username field\n        username: username\n      }; // Add the document to the \"users\" collection\n\n      await setDoc(docRef, data);\n      console.log(\"Document has been added successfully\");\n      navigate(\"/\");\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-3\",\n        children: \"Firebase Auth Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicUsername\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Email address\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"Submit\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 box mt-3 text-center\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Signup, \"LsMM8xYoxVmJaeCY0uE39pFB+Bw=\", false, function () {\n  return [useUserAuth, useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/ash/hack/React_Firebase_Auth_Tutorial/src/components/Signup.js"],"names":["React","useState","Link","useNavigate","Form","Alert","Button","db","useUserAuth","doc","getFirestore","collection","setDoc","Signup","username","setUsername","email","setEmail","error","setError","password","setPassword","signUp","navigate","handleSubmit","e","preventDefault","userCredential","user","setBalance","uid","setIncome","setBcatIncome","setIcatIncome","setOcatIncome","setScatIncome","setExpense","setFExpense","setOExpense","setRExpense","setSExpense","setTExpense","setBudget","total","capital","merge","docRef","data","console","log","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Alert } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { db } from \"../firebase\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nimport { doc } from \"firebase/firestore\";\nimport { getFirestore, collection, setDoc } from \"firebase/firestore\";\nconst Signup = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { signUp } = useUserAuth();\n  let navigate = useNavigate();\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      // Sign up the user\n      const userCredential = await signUp(email, password);\n      const user = userCredential.user;\n\n      const setBalance = doc(db, user.uid,\"balance\");\n      const setIncome = doc(db, user.uid, 'income');\n      const setBcatIncome = doc(db, `${user.uid}/income/categories`, 'business');\n      const setIcatIncome = doc(db, `${user.uid}/income/categories`, 'investment-returns');\n      const setOcatIncome = doc(db, `${user.uid}/income/categories`, 'others');\n      const setScatIncome = doc(db, `${user.uid}/income/categories`, 'salary');\n\n\n      const setExpense = doc(db, user.uid, 'expense');\n      const setFExpense = doc(db, `${user.uid}/expense/categories`, 'food');\n      const setOExpense = doc(db, `${user.uid}/income/categories`, 'others');\n      const setRExpense = doc(db, `${user.uid}/income/categories`, 'rent');\n      const setSExpense = doc(db, `${user.uid}/income/categories`, 'shopping');\n      const setTExpense = doc(db, `${user.uid}/income/categories`, 'travel');\n\n      const setBudget = doc(db, user.uid, 'budget');\n\n      setDoc(setBalance,{total:\"0\"}, { capital: true }, { merge: true });\n      setDoc(setIncome,{total:\"0\"}, { capital: true }, { merge: true });\n      setDoc(setBcatIncome, { capital: true }, { merge: true });\n      setDoc(setIcatIncome, { capital: true }, { merge: true });\n      setDoc(setOcatIncome, { capital: true }, { merge: true });\n      setDoc(setScatIncome, { capital: true }, { merge: true });\n\n      setDoc(setExpense,{total:\"0\"}, { capital: true }, { merge: true });\n      setDoc(setFExpense, { capital: true }, { merge: true });\n      setDoc(setOExpense, { capital: true }, { merge: true });\n      setDoc(setRExpense, { capital: true }, { merge: true });\n      setDoc(setSExpense, { capital: true }, { merge: true });\n      setDoc(setTExpense, { capital: true }, { merge: true });\n\n      setDoc(setBudget,{total:\"0\"}, { capital: true }, { merge: true });\n\n\n\n      // Define the document reference and data for the new user document\n      const docRef = doc(db, \"users\", user.uid);\n      const data = {\n        // Add the necessary fields for the new user document\n        // For example, you can include a username field\n        username: username,\n      };\n\n      // Add the document to the \"users\" collection\n      await setDoc(docRef, data);\n\n      console.log(\"Document has been added successfully\");\n\n      navigate(\"/\");\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"p-4 box\">\n        <h2 className=\"mb-3\">Firebase Auth Signup</h2>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n            <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={(e) => setUsername(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email address\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" type=\"Submit\">\n              Sign up\n            </Button>\n          </div>\n        </Form>\n      </div>\n      <div className=\"p-4 box mt-3 text-center\">\n        Already have an account? <Link to=\"/\">Log In</Link>\n      </div>\n    </>\n  );\n};\n\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}